"""
Generated by Metaproject.

Shared methods for tests.

Location: tests/generated/shared_test_methods.py
"""
import os
import re
import shutil
import pathlib
from types import SimpleNamespace

from locshapython.extension.commands.command_manager import CommandManager
from locshapython.extension import utils

# 1. from locshapython.extension.registry import Registry OR
# 2. from gim_metaproject.extension.registry import Registry
from locshapython.extension.registry import Registry


def logger():
    """Return logger for the shared test methods."""
    return utils.get_logger(__name__)


def set_up(test):
    """
    Set up the test environment.
    """
    Registry.set_command_manager(CommandManager())

    fixtures: pathlib.Path = (pathlib.Path(__file__) / "../../fixtures").resolve()
    workspace: pathlib.Path = fixtures / "workspace"
    install_path: pathlib.Path = fixtures / "install"
    projects_path: pathlib.Path = fixtures / "project"
    test.fixtures = fixtures
    test.workspace = workspace
    test.projects_path = projects_path
    test.install_path = install_path

    Registry.set_module_spec(SimpleNamespace(origin=fixtures / "install"))


def tear_down(test, to_be_removed=None):
    """
    Clear mediator.

    Remove fixtures.
    """
    Registry.clear()

    if not re.search("fixtures", str(test.fixtures)):
        raise ValueError("Invalid path")

    if not to_be_removed:
        to_be_removed = []

    for file in to_be_removed:
        path = os.path.join(test.fixtures, file)
        if os.path.isfile(path):
            os.remove(path)
        elif os.path.isdir(path):
            shutil.rmtree(path)
